{
    "filetool": {
        "code": "import os\n\nclass FileTool:\n    \"\"\"\n    A tool for performing basic file operations such as listing files in a directory,\n    reading a file, and writing to a file.\n    \"\"\"\n    def __init__(self):\n        self._description=\"File tool\"\n    def list_files(self, directory):\n        \"\"\"\n        Lists all files in the given directory.\n        \n        :param directory: Path to the directory\n        :return: List of file names\n        \"\"\"\n        try:\n            return os.listdir(directory)\n        except FileNotFoundError:\n            return f\"Error: The directory {directory} does not exist.\"\n        except PermissionError:\n            return f\"Error: Permission denied to access {directory}.\"\n        except Exception as e:\n            return f\"An error occurred: {e}\"\n\n    def read_file(self, file_path):\n        \"\"\"\n        Reads the content of a file.\n        \n        :param file_path: Path to the file\n        :return: Content of the file\n        \"\"\"\n        try:\n            with open(file_path, 'r') as file:\n                return file.read()\n        except FileNotFoundError:\n            return f\"Error: The file {file_path} does not exist.\"\n        except PermissionError:\n            return f\"Error: Permission denied to read {file_path}.\"\n        except Exception as e:\n            return f\"An error occurred: {e}\"\n\n    def write_file(self, file_path, content):\n        \"\"\"\n        Writes content to a file.\n        \n        :param file_path: Path to the file\n        :param content: Content to write to the file\n        :return: Success message or error\n        \"\"\"\n        try:\n            with open(file_path, 'w') as file:\n                file.write(content)\n                return f\"Successfully wrote to {file_path}\"\n        except PermissionError:\n            return f\"Error: Permission denied to write to {file_path}.\"\n        except Exception as e:\n            return f\"An error occurred: {e}\"\n\n",
        "description": "File tool"
    },
    "createfolder": {
        "code": "import os\n\nclass create_folder:\n    # def __init__(self):\n       \n    def create_folder(working_directory, folder_name):\n        \"\"\"\n        Create a folder under the specified working directory or the default working directory.\n\n        Args:\n        working_directory (str): The path of the working directory. If not provided, the default working directory will be used.\n        folder_name (str): The name of the folder to be created. Default is 'myfold'.\n\n        Returns:\n        None\n        \"\"\"\n\n        self._description=\"Create a new folder\"\n        # Check if the working_directory is provided, if not, use the default working directory\n        if working_directory:\n            os.chdir(working_directory)\n\n        # Create the folder\n        os.makedirs(folder_name)\n",
        "description": "Create a new folder"
    }
}